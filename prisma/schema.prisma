generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                    String                 @id @default(cuid())
    nombre                String
    apellido              String
    profile_picture       String?
    role                  UserRole               @default(USER)
    edad                  String
    email                 String                 @unique
    password              String
    emailVerified         DateTime?
    createdAt             DateTime               @default(now())
    isTwoFactorEnabled    Boolean                @default(false)
    accounts              Account[]
    twoFactorConfirmation TwoFactorConfirmation?
    publications          Publication[]
}


model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String
    access_token      String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}
model Publication {
    id                  String   @id @default(cuid())
    id_user             String
    publication_date    DateTime @default(now())
    url_image           String?
    publication_message String

    user                User     @relation(fields: [id_user], references: [id], onDelete: Cascade)

    @@index([id_user])
}

model VerificationToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model PasswordResetToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model TwoFactorToken {
    id      String   @id @default(cuid())
    email   String
    token   String   @unique
    expires DateTime

    @@unique([email, token])
}

model TwoFactorConfirmation {
    id     String @id @default(cuid())
    userId String @unique
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
    ADMIN
    USER
}

